minor_changes:
  - modules - The ``AnsibleModule.deprecate`` function no longer sends deprecation messages to the target host's logging system.
  - ansible-test - Improved ``pylint`` checks for Ansible-specific deprecation functions.
  - deprecations - Removed support for specifying deprecation dates as a ``datetime.date``, which was included in an earlier 2.19 pre-release.
  - deprecations - Some argument names to ``deprecate_value`` for consistency with existing APIs.
    An earlier 2.19 pre-release included a ``removal_`` prefix on the ``date`` and ``version`` arguments.
  - deprecations - Collection name strings not of the form ``ns.coll`` passed to deprecation API functions will result in an error.
  - collection metadata - The collection loader now parses scalar values from ``meta/runtime.yml`` as strings.
    This avoids issues caused by unquoted values such as versions or dates being parsed as types other than strings.
  - deprecation warnings - Deprecation warning APIs automatically capture the identity of the deprecating plugin.
    The ``collection_name`` argument is only required to correctly attribute deprecations that occur in module_utils or other non-plugin code.
  - deprecation warnings - Improved deprecation messages to more clearly indicate the affected content, including plugin name when available.

deprecated_features:
  - plugins - Accessing plugins with ``_``-prefixed filenames without the ``_`` prefix is deprecated.
  - Passing a ``warnings` or ``deprecations`` key to ``exit_json`` or ``fail_json`` is deprecated.
    Use ``AnsibleModule.warn`` or ``AnsibleModule.deprecate`` instead.
